package general

import (
	"BOOT-BOT/db/manage"
	"context"
	"fmt"
	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
	"github.com/jmoiron/sqlx"
)

const (
	welcomeDesc = "–ü—Ä–∏–≤–µ—Ç, %s! üëã\n\nBOOT: –ë—ã—Å—Ç—Ä—ã–µ –æ–ø—Ä–æ—Å—ã –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è! ‚ö°Ô∏èüöÄ\n\nBOOT - —ç—Ç–æ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø—Ä–æ—Å—ã –≤ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã! ü§Ø \n\n–ó–∞–±—É–¥—å—Ç–µ –æ –¥–æ–ª–≥–∏—Ö –æ–∂–∏–¥–∞–Ω–∏—è—Ö, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –º–Ω–µ–Ω–∏—è. –° BOOT –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø—Ä–æ—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ. ‚è±Ô∏è\n\n–ß—Ç–æ –¥–µ–ª–∞–µ—Ç BOOT –æ—Å–æ–±–µ–Ω–Ω—ã–º?\n\n‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫. üí®\n‚Ä¢ –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π: –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –æ–ø—Ä–æ—Å—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –¥–ª–∏–Ω—ã. ü§©\n‚Ä¢ –ì–∏–±–∫–æ—Å—Ç—å: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –≤–æ–ø—Ä–æ—Å–æ–≤, –≤–∫–ª—é—á–∞—è —Ç–µ–∫—Å—Ç–æ–≤—ã–µ, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∏ —à–∫–∞–ª—É –æ—Ü–µ–Ω–æ–∫. üìùüìä\n‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤. ‚ú®\n‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ BOOT –¥–ª—è –ª—é–±—ã—Ö —Ü–µ–ª–µ–π: –æ—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–æ —Å–±–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤. üìàüë•\n\nBOOT - —ç—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ä–æ—Å–∫–æ—à—å!\n\n‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–µ 50 –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ! üéÅ\n‚Ä¢ –ù–∏–∑–∫–∏–µ —Ü–µ–Ω—ã: –° BOOT –æ–ø—Ä–æ—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ª—é–±–æ–≥–æ –±—é–¥–∂–µ—Ç–∞. üí∞\n‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å. üíª\n\nBOOT - —ç—Ç–æ –∏–¥–µ–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç –≤—Ä–µ–º—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å! ‚è∞üèÜ\n"
)

func Auth(id int64) (*sqlx.DB, error) {
	db, err := manage.Connection()
	if err != nil {
		return nil, err
	}

	isExist, err := manage.CheckUser(db, id)
	if err != nil {
		return nil, err
	}

	if !isExist {
		err = manage.AddUser(db, id)
		if err != nil {
			return nil, err
		}
	}
	return db, nil
}

func StartHandler(ctx context.Context, b *bot.Bot, update *models.Update) {
	db, err := Auth(update.Message.Chat.ID)
	if err != nil {
		panic(err.Error())
	}
	defer db.Close()

	_, err = b.SendMessage(ctx, &bot.SendMessageParams{
		ChatID: update.Message.Chat.ID,
		Text:   fmt.Sprintf(welcomeDesc, update.Message.Chat.Username),
		ReplyMarkup: &models.ReplyKeyboardMarkup{
			Keyboard: [][]models.KeyboardButton{
				{
					{Text: "üß†AI"},
					{Text: "üëÖLanguage"},
					{Text: "üí∞–ë–∞–ª–∞–Ω—Å"},
				},
				{
					{Text: "üìã–ü–æ–¥–ø–∏—Å–∫–∏"},
					{Text: "üë§–ò–Ω—Ñ–æ"},
				},
			},
		},
	})
	if err != nil {
		panic(err.Error())
	}
}
